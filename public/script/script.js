'use strict';let taskLocalData=[],tempData=[],local=!0,userId="guest";localStorage.tasks&&(taskLocalData=extractLocalStorageData("tasks"));const tabs=document.querySelectorAll(".panel__item"),displayList=document.querySelector(".display-list");let currentActiveTab;const handlerNew=makeHandlerTab(displayList,!0);handlerNew(),currentActiveTab=handlerNew,tabs[0].addEventListener("click",handlerNew,!1);const handlerOld=makeHandlerTab(displayList,!1);tabs[1].addEventListener("click",handlerOld);const handlerTags=makeHandlerTabTags(displayList);tabs[2].addEventListener("click",handlerTags,!1);const mql=window.matchMedia("(min-width: 980px)"),addSection=document.querySelector(".aside-add"),panel=document.querySelector(".panel");mql.matches||tabs[3].addEventListener("click",handlerAddPanel),mql.addEventListener("change",handlerAddSide);function handlerAddSide(b){b.matches?(tabs[3].removeEventListener("click",handlerAddPanel),displayList.hidden=!1,addSection.style.display="block"):(tabs[3].addEventListener("click",handlerAddPanel),addSection.style.display="none")}function handlerAddPanel(){displayList.hidden=!0,addSection.style.display="block"}const burger=document.querySelector(".burger"),menu=document.querySelector(".menu");burger.addEventListener("click",()=>{menu.classList.toggle("menu_invisible")});const mobMql=window.matchMedia("(min-width: 760px)");textPanelChanger(mobMql.matches),mobMql.addEventListener("change",b=>{textPanelChanger(b.matches)});function textPanelChanger(b){b?(tabs[0].firstElementChild.textContent="Newest",tabs[1].firstElementChild.textContent="Oldest"):(tabs[0].firstElementChild.textContent="New",tabs[1].firstElementChild.textContent="Old")}class Task{constructor(b){this.owner="guest",this.description=b||"none",this._tags=["none"],this.completed=!1}set tags(b){""!==b&&(this._tags=b.trim().toLowerCase().replace(/(\s*,+\s*)|(\s+)/g," ").split(" "))}}const formAdd=document.forms.formAdd,handlerSubmitAdd=makeHandlerSubmitAdd(formAdd,Task);formAdd.addEventListener("submit",handlerSubmitAdd,!1);const pageWrap=document.querySelector(".page-wrap"),tabsHandlers={New:handlerNew,Old:handlerOld,Tag:handlerTags};pageWrap.addEventListener("click",c=>{if(c.target.classList.contains("link_panel")&&(currentActiveTab=tabsHandlers[c.target.textContent.slice(0,3)]),!c.defaultPrevented){const a=document.querySelector(".task__item_active");"input"!==c.target.localName&&(a?.hidden&&(a.hidden=!1,a.previousElementSibling.remove()),inactivationItem(a)),c.target!==submitButton&&(modalMenu.hidden=!0)}},!1);function makeHandlerTab(f,a=!1){return()=>{!0===f.hidden&&(f.hidden=!1,addSection.style.display="none"),f.innerHTML="";const b=makeList(taskLocalData,a);b&&f.append(b);const c=document.querySelectorAll(".task__item"),d=makeHandlerTaskItem(null);c.forEach(b=>{b.addEventListener("click",d,!1)})}}function makeHandlerTabTags(g){return()=>{!0===g.hidden&&(g.hidden=!1,addSection.style.display="none"),g.innerHTML="";const h=taskLocalData.reduce((d,a)=>(a._tags.forEach(b=>{b in d||(d[b]=[]),d[b].push({description:a.description,completed:a.completed})}),d),{}),b=document.createElement("ul");b.classList="list-tags list_text";const a=Object.keys(h);a.forEach(c=>{const a=document.createElement("li");a.className="tag-row";const d=document.createElement("div");d.className="tag-row__tag",d.textContent=c;const e=makeList(h[c],!1,"list_theme_tag","list__row_theme_tag");a.append(d),a.append(e),b.append(a)}),g.append(b);const c=document.querySelectorAll(".task__item"),d=makeHandlerTaskItem(null);c.forEach(b=>{b.addEventListener("click",d,!1)})}}function makeList(f,i=!1,a="list_theme_one",b="list__row_theme_one"){const d=makeElement("ol","list list_text "+a);if(f)return f.forEach((e,a)=>{const c=makeElement("li","list__row "+b),f=makeElement("div","task"),g=makeElement("span","task__item");g.setAttribute("data-index",a),e.completed&&(c.classList.add("list__row_done"),g.classList.add("task__item_done")),addText(g,e.description),f.append(g),c.append(f),i?(d.prepend(c),d.reversed=!0):d.append(c)}),d}function makeElement(d,a){const b=document.createElement(d);return b.className=a,b}function addText(c,a){c.textContent=a}function makeHandlerTaskItem(e){return a=>{const b=a.target,c=b.parentElement;inactivationItem(e),b.classList.add("task__item_active"),b.nextElementSibling||(c.firstElementChild.classList.contains("task__item_done")?c.append(makeControls("done")):c.append(makeControls("default"))),e=b,a.preventDefault()}}function inactivationItem(b){b?.classList.remove("task__item_active"),b?.nextElementSibling?.remove()}const signup=document.getElementById("signup"),login=document.getElementById("login"),confirmInput=document.getElementById("confirm"),modalMenu=document.querySelector(".modal"),submitButton=document.querySelector(".modal-menu__submit"),formLogin=document.forms[0];modalMenu.hidden=!0,login.addEventListener("click",handlerLogin);function handlerLogin(b){clearInputs(),submitButton.value="login",modalMenu.classList.remove("modal_signup"),confirmInput.hidden=!0,confirmInput.required=!1,modalMenu.hidden=!1,b.preventDefault()}signup.addEventListener("click",b=>{"Sign up"===b.target.textContent?(clearInputs(),modalMenu.classList.add("modal_signup"),submitButton.value="signup",confirmInput.hidden=!1,confirmInput.required=!0,modalMenu.hidden=!1):"Log out"===b.target.textContent&&(login.textContent="Log in",login.className="link link_menu",login.addEventListener("click",handlerLogin),b.target.textContent="Sign up",taskLocalData=tempData,local=!0,userId="gest",currentActiveTab()),b.preventDefault()}),confirmInput.addEventListener("input",()=>{confirmInput.hidden||formLogin[1].value===confirmInput.value?(confirmInput.classList.remove("invalid"),formLogin[3].disabled=!1,submitButton.style.backgroundColor=""):(confirmInput.classList.add("invalid"),formLogin[3].disabled=!0,submitButton.style.backgroundColor="grey")}),modalMenu.addEventListener("click",b=>{b.target!==submitButton&&b.preventDefault()}),formLogin.addEventListener("submit",handlerSubmit);async function handlerSubmit(e){e.preventDefault();const a=e.target.lastElementChild.value,b={username:formLogin[0].value,password:formLogin[1].value,action:a};let c=await fetch("/user",{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(b)});if(200===c.status){let d=await c.json();if("signup"===d.action){const a=document.createElement("span");a.className="modal-message",a.textContent=d.message,modalMenu.prepend(a)}else"login"===d.action&&(login.textContent=d.username,login.className="logined",modalMenu.hidden=!0,login.removeEventListener("click",handlerLogin),signup.textContent="Log out",tempData=taskLocalData.slice(),taskLocalData=d.tasks,local=!1,userId=d.username,currentActiveTab())}else{const b=document.createElement("span");b.className="modal-message",b.style.color="red",b.textContent="Incorrect login or password",modalMenu.prepend(b)}}function clearInputs(){formLogin[0].value="",formLogin[1].value="",formLogin[2].value="",submitButton.style.backgroundColor="",confirmInput.classList.remove("invalid"),formLogin[3].disabled=!1,"span"===modalMenu.firstElementChild.localName&&modalMenu.firstElementChild.remove()}function extractLocalStorageData(b){return JSON.parse(localStorage.getItem(b))}function saveToLocalStorage(c,a){local&&localStorage.setItem(c,JSON.stringify(a))}function makeCallback(c,...a){return()=>c(...a)}function makeHandlerSubmitAdd(g,a){return async b=>{const c=g[0],d=g[1],e=new a(c.value);(e.tags=d.value,e.owner=userId,c.value="",d.value="",taskLocalData.push(e),b.preventDefault(),local)?saveToLocalStorage("tasks",taskLocalData):await fetch(`/todos/add`,{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(e)}),currentActiveTab()}}function makeControls(c="default"){const d=document.createElement("div");return d.className="controls controls_theme_one",{default:["done","edit","delete"],done:["hide","undo","delete"],edit:["save","undo","hide"]}[c].forEach(b=>{const a=document.createElement("span");a.className="controls__button button",a.classList.add(`controls__button_${b}`),d.append(a)}),d.addEventListener("click",controlsHandler,!1),d}function controlsHandler(f){if(f.target.className.includes("done")){const a=f.target.parentElement.previousElementSibling;toggleDoneClassTaskItem(a),toggleCompletedTaskItem(a,"index",taskLocalData),currentActiveTab==handlerTags&&currentActiveTab()}else if(f.target.className.includes("undo")){const a=f.target.parentElement.previousElementSibling;a.classList.contains("task__item_done")&&(toggleDoneClassTaskItem(a),console.log(a),toggleCompletedTaskItem(a,"index",taskLocalData)),currentActiveTab==handlerTags&&currentActiveTab()}else if(f.target.className.includes("edit")){const a=f.target.parentElement.previousElementSibling,b=document.createElement("input");b.className="form-add__input task__input",b.value=a.textContent;const c=a.parentElement;c.prepend(b),a.hidden=!0,b.select();const d=c.querySelector(".controls");d.replaceWith(makeControls("edit")),f.preventDefault()}else if(f.target.className.includes("save")){const a=f.target.closest(".task"),b=a.firstElementChild,c=b.nextElementSibling;b.value!==c.textContent&&(c.textContent=b.value,taskLocalData[c.dataset.index].description=b.value,local?saveToLocalStorage("tasks",taskLocalData):saveToDB(taskLocalData[c.dataset.index]._id,b.value,"edit")),currentActiveTab==handlerTags&&currentActiveTab()}else if(f.target.className.includes("delete")){const d=f.target.parentElement.previousElementSibling;let e;if(currentActiveTab!==handlerTags)e=taskLocalData[d.dataset.index],taskLocalData.splice(d.dataset.index,1);else{const c=d.textContent;taskLocalData.forEach((a,b)=>{a.description===c&&(e=taskLocalData[b],taskLocalData.splice(b,1))}),console.log(taskLocalData)}local?saveToLocalStorage("tasks",taskLocalData):saveToDB(e._id,void 0,"delete"),currentActiveTab()}}function toggleDoneClassTaskItem(b){b.classList.toggle("task__item_done"),b.closest(".list__row").classList.toggle("list__row_done")}async function saveToDB(e,a="",b){let c=await fetch(`todos/${b}`,{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify({id:e,description:a})});200!==c.status&&console.log("some edit error")}async function toggleCompletedTaskItem(e,a,b){const c=e.dataset[a];if(b[c].completed=!b[c].completed,local)saveToLocalStorage("tasks",taskLocalData);else{let d=await fetch("todos/done",{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify({id:b[c]._id,completed:b[c].completed})});200!==d.status&&console.log("some done error")}}