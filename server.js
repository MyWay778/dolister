const http=require("http"),express=require("express"),bodyParser=require("body-parser"),port=process.env.PORT||80,mongoose=require("mongoose");mongoose.connect("mongodb+srv://ivan:ivan@cluster0.cox6i.mongodb.net/bwa_test?retryWrites=true&w=majority",{useNewUrlParser:!0,useUnifiedTopology:!0});const db=mongoose.connection;db.on("error",console.error.bind(console,"connection error")),db.once("open",function(){console.log("we're connecting")});const UserSchema=mongoose.Schema({username:String,password:String}),User=mongoose.model("User",UserSchema),ToDoSchema=mongoose.Schema({owner:String,description:String,_tags:Array,completed:Boolean}),ToDo=mongoose.model("ToDo",ToDoSchema),app=express();app.use(express.static(__dirname+"/public")),app.use(bodyParser.urlencoded({extended:!1})),app.use(bodyParser.json()),http.createServer(app).listen(port),app.post("/user",(a,b)=>{"signup"===a.body.action?User.find({},(c,d)=>{if(c)console.log(c),b.sendStatus(500);else if(20<d.length)b.json({action:"signup",message:"Sorry max twenty users"});else{const c=new User({username:a.body.username,password:a.body.password});c.save((a,c)=>{a&&(console.log(a),b.sendStatus(500)),b.status(200).json({action:"signup",message:c.username+" successfully registered"})})}}):"login"===a.body.action&&User.find({username:a.body.username,password:a.body.password},(a,c)=>{a?(console.log(a),b.sendStatus(500)):0===c.length?b.sendStatus(201):ToDo.find({owner:c[0].username},(a,d)=>{a&&(console.log(a),b.sendStatus(500)),b.json({action:"login",username:c[0].username,tasks:d})})})}),app.post("/todos/:action",(a,b)=>{switch(a.params.action){case"add":ToDo.find({},(c,d)=>{if(100>d.length){const c=new ToDo(a.body);c.save(a=>{a&&(console.log(a),b.sendStatus(500)),b.sendStatus(200)})}else b.sendStatus(501)});break;case"done":ToDo.updateOne({_id:a.body.id},{completed:a.body.completed},(a,c)=>{a&&(console.log(a),b.sendStatus(500)),1===c.ok&&b.sendStatus(200)});break;case"edit":ToDo.updateOne({_id:a.body.id},{description:a.body.description},(a,c)=>{a&&(console.log(a),b.sendStatus(500)),1===c.ok&&b.sendStatus(200)});break;case"delete":ToDo.deleteOne({_id:a.body.id},(a,c)=>{a&&(console.log(a),b.sendStatus(500)),1===c.ok&&b.sendStatus(200)});}});